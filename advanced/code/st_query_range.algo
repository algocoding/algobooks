void propagation(int left, int right, int idx)
{
	tree[idx] += lazy[idx] * (right - left + 1);
	if (left != right){
		lazy[idx * 2] += lazy[idx];
		lazy[idx * 2 + 1] += lazy[idx];
	}
	lazy[idx] = 0;
}
int queryLazy(int l, int r, int idx, int a, int b)
{
	if (lazy[idx] != 0)
	{
		propagation(idx, l, r);
	}
	if (a > r || b < l) return 0;
	if (a <= l && r <= b) return tree[idx];

	int mid = (l + r) / 2;
	return queryLazy(l, mid, idx*2, a, b) + queryLazy(mid + 1, r, idx*2 + 1, a, b);
}